<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd"> 

<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
	<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
	<property name="url" value="jdbc:mysql://ai.innerwave.co.kr:43306/pis?useSSL=false&characterEncoding=UTF-8&serverTimezone=UTC"></property>
	<property name="username" value="pis"></property>
	<property name="password" value="pis!1234"></property>
</bean>

<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
  <property name="dataSource" ref="dataSource" />	<!-- id:dataSource의 Bean 참조 -->
  <property name="configLocation" value="classpath:/mybatis-config.xml" />	<!-- mybatis 설정 xml파일의 위치 -->
  <property name="mapperLocations" value="classpath:mapping/**/query.xml"/> <!-- 쿼리가 있는 xml 위치 -->
</bean>
<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" destroy-method="clearCache">
    <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
</bean>

<context:component-scan base-package="com.innerwave.ai.domain"></context:component-scan> <!-- 특정 패키지 안의 클래스들을 스캔하고, 빈 인스턴스를 생성한다, base-pakage : 패키지를 어디부터 스캔할지 지정 -->
</beans>


